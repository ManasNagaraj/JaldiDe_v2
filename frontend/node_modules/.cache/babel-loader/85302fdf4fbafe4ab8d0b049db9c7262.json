{"ast":null,"code":"import { SHOP_LIST_REQUEST, SHOP_LIST_SUCCESS, SHOP_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, SHOP_SAVE_FAIL, SHOP_SAVE_SUCCESS, SHOP_SAVE_REQUEST } from \"../constants/shopConstants\";\nimport axios from \"axios\";\n\nconst listShops = () => async dispatch => {\n  try {\n    dispatch({\n      type: SHOP_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/shops/\");\n    dispatch({\n      type: SHOP_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SHOP_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst listProducts = shopID => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST,\n      payload: shopID\n    });\n    const {\n      data\n    } = await axios.get(\"/api/shops/\" + shopID);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveShop = shop => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SHOP_SAVE_REQUEST,\n      payload: shop\n    });\n    const {\n      sellerSignin: {\n        sellerInfo\n      }\n    } = getState(); //if (!product._id) {\n\n    const {\n      data\n    } = await axios.post('/createshop/' + shop._id, shop);\n    dispatch({\n      type: SHOP_SAVE_SUCCESS,\n      payload: data\n    }); //} \n    //   else {\n    //     const { data } = await Axios.put('/api/products/' + product._id, product, {\n    //       headers: {\n    //         'Authorization': 'Bearer ' + userInfo.token\n    //       }\n    //     });\n    //     dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\n    //   }\n  } catch (error) {\n    dispatch({\n      type: SHOP_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listShops, listProducts, saveShop };","map":{"version":3,"sources":["/home/brotherlymite/Desktop/jaldide/frontend/src/actions/shopActions.js"],"names":["SHOP_LIST_REQUEST","SHOP_LIST_SUCCESS","SHOP_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","SHOP_SAVE_FAIL","SHOP_SAVE_SUCCESS","SHOP_SAVE_REQUEST","axios","listShops","dispatch","type","data","get","payload","error","message","listProducts","shopID","saveShop","shop","getState","sellerSignin","sellerInfo","post","_id"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,iBAA5B,EAA+CC,cAA/C,EAA+DC,oBAA/D,EAAqFC,oBAArF,EAA2GC,iBAA3G,EAA8HC,cAA9H,EAA8IC,iBAA9I,EAAiKC,iBAAjK,QAA0L,4BAA1L;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACxC,MACA;AACIA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEZ;AAAR,KAAD,CAAR;AACA,UAAM;AAAEa,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACK,GAAN,CAAU,aAAV,CAAvB;AACAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX,iBAAR;AAA2Bc,MAAAA,OAAO,EAAEF;AAApC,KAAD,CAAR;AACH,GALD,CAMA,OAAMG,KAAN,EACA;AACIL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,cAAR;AAAwBa,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAAvC,KAAD,CAAR;AACH;AACJ,CAXD;;AAaA,MAAMC,YAAY,GAAIC,MAAD,IAAY,MAAOR,QAAP,IAAoB;AACjD,MACA;AACIA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET,oBAAR;AAA8BY,MAAAA,OAAO,EAAEI;AAAvC,KAAD,CAAR;AACA,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACK,GAAN,CAAU,gBAAgBK,MAA1B,CAAvB;AACAR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,oBAAR;AAA8BW,MAAAA,OAAO,EAAEF;AAAvC,KAAD,CAAR;AACH,GALD,CAMA,OAAMG,KAAN,EACA;AACIL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,iBAAR;AAA2BU,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA1C,KAAD,CAAR;AACH;AACJ,CAXD;;AAaA,MAAMG,QAAQ,GAAIC,IAAD,IAAU,OAAOV,QAAP,EAAiBW,QAAjB,KAA8B;AACrD,MAAI;AACFX,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,iBAAR;AAA2BO,MAAAA,OAAO,EAAEM;AAApC,KAAD,CAAR;AACA,UAAM;AAAEE,MAAAA,YAAY,EAAE;AAAEC,QAAAA;AAAF;AAAhB,QAAmCF,QAAQ,EAAjD,CAFE,CAGF;;AACE,UAAM;AAAET,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACgB,IAAN,CAAW,iBAAgBJ,IAAI,CAACK,GAAhC,EAAqCL,IAArC,CAAvB;AACAV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,iBAAR;AAA2BQ,MAAAA,OAAO,EAAEF;AAApC,KAAD,CAAR,CALA,CAMF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC,GAhBD,CAgBE,OAAOG,KAAP,EAAc;AAEdL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,cAAR;AAAwBS,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAAvC,KAAD,CAAR;AACD;AACJ,CArBD;;AAwBA,SAASP,SAAT,EAAqBQ,YAArB,EAAmCE,QAAnC","sourcesContent":["import { SHOP_LIST_REQUEST, SHOP_LIST_SUCCESS, SHOP_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, SHOP_SAVE_FAIL, SHOP_SAVE_SUCCESS, SHOP_SAVE_REQUEST } from \"../constants/shopConstants\";\nimport axios from \"axios\";\n\nconst listShops = () => async (dispatch) => {\n    try\n    {\n        dispatch({ type: SHOP_LIST_REQUEST });\n        const { data } = await axios.get(\"/api/shops/\");\n        dispatch({ type: SHOP_LIST_SUCCESS, payload: data});\n    }\n    catch(error)\n    {\n        dispatch({ type: SHOP_LIST_FAIL, payload: error.message});\n    }  \n}\n\nconst listProducts = (shopID) => async (dispatch) => {\n    try\n    {\n        dispatch({ type: PRODUCT_LIST_REQUEST, payload: shopID });\n        const { data } = await axios.get(\"/api/shops/\" + shopID);\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n    }\n    catch(error)\n    {\n        dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\n    }\n}\n\nconst saveShop = (shop) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: SHOP_SAVE_REQUEST, payload: shop });\n      const { sellerSignin: { sellerInfo } } = getState();\n      //if (!product._id) {\n        const { data } = await axios.post('/createshop/'+ shop._id, shop);\n        dispatch({ type: SHOP_SAVE_SUCCESS, payload: data });\n      //} \n    //   else {\n    //     const { data } = await Axios.put('/api/products/' + product._id, product, {\n    //       headers: {\n    //         'Authorization': 'Bearer ' + userInfo.token\n    //       }\n    //     });\n    //     dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\n    //   }\n  \n    } catch (error) {\n  \n      dispatch({ type: SHOP_SAVE_FAIL, payload: error.message });\n    }\n}\n\n\nexport { listShops , listProducts ,saveShop, }"]},"metadata":{},"sourceType":"module"}