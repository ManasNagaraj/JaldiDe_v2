{"ast":null,"code":"import { SHOP_LIST_REQUEST, SHOP_LIST_SUCCESS, SHOP_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, SHOP_SAVE_FAIL, SHOP_SAVE_SUCCESS, SHOP_SAVE_REQUEST, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL } from \"../constants/shopConstants\";\nimport axios from \"axios\";\n\nconst listShops = () => async dispatch => {\n  try {\n    dispatch({\n      type: SHOP_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/shops/\");\n    dispatch({\n      type: SHOP_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SHOP_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst listProducts = shopID => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST,\n      payload: shopID\n    });\n    const {\n      data\n    } = await axios.get(\"/api/shops/\" + shopID);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveShop = shop => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SHOP_SAVE_REQUEST,\n      payload: shop\n    });\n    const {\n      sellerSignin: {\n        sellerInfo\n      }\n    } = getState(); //await axios.get(shop.product_id);\n\n    if (shop.p_id !== 10) {\n      console.log(shop.product_id);\n      const {\n        data\n      } = await axios.post('/createshop/' + shop._id, shop);\n      dispatch({\n        type: SHOP_SAVE_SUCCESS,\n        payload: data\n      });\n    } //   else {\n    //     const { data } = await Axios.put('/api/products/' + product._id, product, {\n    //       headers: {\n    //         'Authorization': 'Bearer ' + userInfo.token\n    //       }\n    //     });\n    //     dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\n    //   }\n\n  } catch (error) {\n    dispatch({\n      type: SHOP_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      sellerSignin: {\n        sellerInfo\n      }\n    } = getState();\n    console.log(product.product_id);\n\n    if (!product.product_id) {\n      const {\n        data\n      } = await axios.post('/addproducts/' + product._id, product);\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await axios.put('/addproducts/' + product._id + '/' + product.product_id, product);\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst deleteProduct = stuff => async (dispatch, getState) => {\n  try {\n    //const { userSignin: { userInfo } } = getState();\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n      payload: stuff\n    });\n    console.log(stuff.prod_id);\n    const {\n      data\n    } = await axios.put(\"/deleteproducts/\" + stuff.sel_id + \"/\" + stuff.prod_id);\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: data,\n      success: true\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listShops, listProducts, saveShop, saveProduct, deleteProduct };","map":{"version":3,"sources":["/home/brotherlymite/Desktop/jaldide/frontend/src/actions/shopActions.js"],"names":["SHOP_LIST_REQUEST","SHOP_LIST_SUCCESS","SHOP_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","SHOP_SAVE_FAIL","SHOP_SAVE_SUCCESS","SHOP_SAVE_REQUEST","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","PRODUCT_SAVE_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","axios","listShops","dispatch","type","data","get","payload","error","message","listProducts","shopID","saveShop","shop","getState","sellerSignin","sellerInfo","p_id","console","log","product_id","post","_id","saveProduct","product","put","deleteProduct","stuff","prod_id","sel_id","success"],"mappings":"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","sourcesContent":["import { SHOP_LIST_REQUEST, SHOP_LIST_SUCCESS, SHOP_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, SHOP_SAVE_FAIL, SHOP_SAVE_SUCCESS, SHOP_SAVE_REQUEST, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL } from \"../constants/shopConstants\";\nimport axios from \"axios\";\n\nconst listShops = () => async (dispatch) => {\n    try\n    {\n        dispatch({ type: SHOP_LIST_REQUEST });\n        const { data } = await axios.get(\"/api/shops/\");\n        dispatch({ type: SHOP_LIST_SUCCESS, payload: data});\n    }\n    catch(error)\n    {\n        dispatch({ type: SHOP_LIST_FAIL, payload: error.message});\n    }  \n}\n\nconst listProducts = (shopID) => async (dispatch) => {\n    try\n    {\n        dispatch({ type: PRODUCT_LIST_REQUEST, payload: shopID });\n        const { data } = await axios.get(\"/api/shops/\" + shopID);\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n    }\n    catch(error)\n    {\n        dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\n    }\n}\n\nconst saveShop = (shop) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: SHOP_SAVE_REQUEST, payload: shop });\n      const { sellerSignin: { sellerInfo } } = getState();\n      //await axios.get(shop.product_id);\n      if (shop.p_id !== 10) {\n        console.log(shop.product_id);\n        const { data } = await axios.post('/createshop/'+ shop._id, shop);\n        dispatch({ type: SHOP_SAVE_SUCCESS, payload: data });\n      }\n    //   else {\n    //     const { data } = await Axios.put('/api/products/' + product._id, product, {\n    //       headers: {\n    //         'Authorization': 'Bearer ' + userInfo.token\n    //       }\n    //     });\n    //     dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\n    //   }\n  \n    } catch (error) {\n  \n      dispatch({ type: SHOP_SAVE_FAIL, payload: error.message });\n    }\n}\n\nconst saveProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_SAVE_REQUEST, payload: product });\n    const { sellerSignin: { sellerInfo } } = getState();\n    console.log(product.product_id);\n\n    if(!product.product_id)\n    {\n      const { data } = await axios.post('/addproducts/'+ product._id, product);\n      dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\n    }\n    else\n    {\n      const { data } = await axios.put('/addproducts/'+ product._id + '/' + product.product_id, product);\n      dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\n    }\n    \n  } catch (error) {\n\n    dispatch({ type: PRODUCT_SAVE_FAIL, payload: error.message });\n  }\n}\n\nconst deleteProduct = (stuff) => async (dispatch, getState) => {\n  try {\n    //const { userSignin: { userInfo } } = getState();\n    dispatch({ type: PRODUCT_DELETE_REQUEST, payload: stuff });\n    console.log(stuff.prod_id);\n    const { data } = await axios.put(\"/deleteproducts/\" + stuff.sel_id + \"/\" + stuff.prod_id);\n    dispatch({ type: PRODUCT_DELETE_SUCCESS, payload: data, success: true });\n  } catch (error) {\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: error.message });\n  }\n}\n\n\nexport { listShops , listProducts ,saveShop, saveProduct, deleteProduct}"]},"metadata":{},"sourceType":"module"}