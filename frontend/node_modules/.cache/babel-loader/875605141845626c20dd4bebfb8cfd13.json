{"ast":null,"code":"import Axios from \"axios\";\nimport { ADD_TO_CART, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\nimport Cookie from \"js-cookie\";\n\nconst addToCart = (shopID, productID) => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await Axios.get(\"/api/shops/\" + shopID);\n    productID = \"\" + productID;\n    const object = data.productItems.find(x => x._pid === productID); //console.log(productID)\n    //console.log(data.productItems.find( x => x._pid === \"1\"))\n\n    console.log(object); //console.log(data.productItems.find(productID===data.productItems._pid));\n\n    dispatch({\n      type: ADD_TO_CART,\n      payload: {\n        product: object._pid,\n        pname: object.pname,\n        pprice: object.pprice,\n        pdesc: object.pdesc // product: data.productItems[productID-1]._id,\n        // pname: data.productItems[productID-1].pname,\n        // pprice: data.productItems[productID-1].pprice,\n        // pdesc: data.productItems[productID-1].pdesc\n\n      }\n    });\n    const {\n      cart: {\n        cartItems\n      }\n    } = getState();\n    Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n  } catch (error) {}\n};\n\nconst removeFromCart = shopID => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: shopID\n  });\n  const {\n    cart: {\n      cartItems\n    }\n  } = getState();\n  Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n};\n\nexport { addToCart, removeFromCart };","map":{"version":3,"sources":["/home/brotherlymite/Desktop/jaldide/frontend/src/actions/cartActions.js"],"names":["Axios","ADD_TO_CART","CART_REMOVE_ITEM","Cookie","addToCart","shopID","productID","dispatch","getState","data","get","object","productItems","find","x","_pid","console","log","type","payload","product","pname","pprice","pdesc","cart","cartItems","set","JSON","stringify","error","removeFromCart"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,4BAA9C;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,SAAS,GAAG,CAACC,MAAD,EAAQC,SAAR,KAAsB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAElE,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMT,KAAK,CAACU,GAAN,CAAU,gBAAcL,MAAxB,CAArB;AACAC,IAAAA,SAAS,GAAG,KAAGA,SAAf;AACA,UAAMK,MAAM,GAAGF,IAAI,CAACG,YAAL,CAAkBC,IAAlB,CAAwBC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWT,SAAxC,CAAf,CAHD,CAIC;AACA;;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ,EAND,CAOC;;AACAJ,IAAAA,QAAQ,CAAC;AAACW,MAAAA,IAAI,EAAEjB,WAAP;AAAoBkB,MAAAA,OAAO,EAAC;AAEjCC,QAAAA,OAAO,EAAET,MAAM,CAACI,IAFiB;AAGjCM,QAAAA,KAAK,EAAEV,MAAM,CAACU,KAHmB;AAIjCC,QAAAA,MAAM,EAAEX,MAAM,CAACW,MAJkB;AAKjCC,QAAAA,KAAK,EAAEZ,MAAM,CAACY,KALmB,CAOjC;AACA;AACA;AACA;;AAViC;AAA5B,KAAD,CAAR;AAcA,UAAM;AAAEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AAAR,QAA0BjB,QAAQ,EAAxC;AACAL,IAAAA,MAAM,CAACuB,GAAP,CAAW,WAAX,EAAwBC,IAAI,CAACC,SAAL,CAAeH,SAAf,CAAxB;AAEH,GAzBD,CAyBE,OAAMI,KAAN,EAAa,CACd;AACJ,CA7BD;;AA+BA,MAAMC,cAAc,GAAIzB,MAAD,IAAY,CAACE,QAAD,EAAWC,QAAX,KACnC;AACID,EAAAA,QAAQ,CAAC;AAAEW,IAAAA,IAAI,EAAEhB,gBAAR;AAA0BiB,IAAAA,OAAO,EAAEd;AAAnC,GAAD,CAAR;AAEA,QAAM;AAAEmB,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AAAR,MAA0BjB,QAAQ,EAAxC;AACAL,EAAAA,MAAM,CAACuB,GAAP,CAAW,WAAX,EAAwBC,IAAI,CAACC,SAAL,CAAeH,SAAf,CAAxB;AACH,CAND;;AAQA,SAAQrB,SAAR,EAAkB0B,cAAlB","sourcesContent":["import Axios from \"axios\"\nimport { ADD_TO_CART, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\nimport Cookie from \"js-cookie\";\n\nconst addToCart = (shopID,productID) => async (dispatch, getState) => {\n    \n    try{\n        const {data} = await Axios.get(\"/api/shops/\"+shopID);\n        productID = \"\"+productID;\n        const object = data.productItems.find( x => x._pid === productID);\n        //console.log(productID)\n        //console.log(data.productItems.find( x => x._pid === \"1\"))\n        console.log(object);\n        //console.log(data.productItems.find(productID===data.productItems._pid));\n        dispatch({type: ADD_TO_CART, payload:{\n            \n            product: object._pid,\n            pname: object.pname,\n            pprice: object.pprice,\n            pdesc: object.pdesc\n\n            // product: data.productItems[productID-1]._id,\n            // pname: data.productItems[productID-1].pname,\n            // pprice: data.productItems[productID-1].pprice,\n            // pdesc: data.productItems[productID-1].pdesc\n\n        }})\n\n        const { cart: { cartItems } } = getState();\n        Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n\n    } catch(error) {\n    }\n}\n\nconst removeFromCart = (shopID) => (dispatch, getState) => \n{\n    dispatch({ type: CART_REMOVE_ITEM, payload: shopID });\n  \n    const { cart: { cartItems } } = getState();\n    Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n}\n\nexport {addToCart,removeFromCart}"]},"metadata":{},"sourceType":"module"}