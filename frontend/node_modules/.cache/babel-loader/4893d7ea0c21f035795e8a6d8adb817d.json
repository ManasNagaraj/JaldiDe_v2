{"ast":null,"code":"var _jsxFileName = \"/home/brotherlymite/Desktop/jaldide/frontend/src/Pages/Sellerinventorypage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { signin } from '../actions/sellerActions'; // import { saveShop } from '../actions/shopActions';\n\nexport default function Sellerinventorypage(props) {\n  const [modalVisible, setModalVisible] = useState(false); //const [id, setId] = useState('');\n\n  const [name, setName] = useState('');\n  const [desc, setDesc] = useState('');\n  const [category, setCategory] = useState('');\n  const shopSave = useSelector(state => state.shopSave);\n  const {\n    loading: loadingSave,\n    success: successSave,\n    error: errorSave\n  } = shopSave;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (successSave) {//setModalVisible(false);\n    }\n\n    return () => {//\n    };\n  }, [successSave]);\n\n  const openModal = shop => {\n    setModalVisible(true); //setId(product._id);\n\n    setName(shop.name);\n    setDesc(shop.desc);\n    setCategory(shop.category);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveShop({\n      //_id: id,\n      name,\n      desc,\n      category\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Wassup new Seller, you can make your own virtual shop here\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, props.match.params.id)) //     <div className=\"content content-margined\">\n  //         <div className=\"product-header\">\n  //         <h3>Products</h3>\n  //         <button className=\"button primary\" onClick={() => openModal({})}>Create Product</button>\n  //         </div>\n  //         {\n  //         modalVisible &&\n  //         <div className=\"form\">\n  //             <form onSubmit={submitHandler} >\n  //             <ul className=\"form-container\">\n  //                 <li>\n  //                 <h2>Create your virtual Shop</h2>\n  //                 </li>\n  //                 <li>\n  //                 {loadingSave && <div>Loading...</div>}\n  //                 {errorSave && <div>{errorSave}</div>}\n  //                 </li>\n  //                 <li>\n  //                 <label htmlFor=\"name\">\n  //                     Shop Name\n  //                 </label>\n  //                 <input type=\"text\" name=\"name\" value={name} id=\"name\" onChange={(e) => setName(e.target.value)}>\n  //                 </input>\n  //                 </li>\n  //                 <li>\n  //                 <label htmlFor=\"description\">\n  //                     Description\n  //                 </label>\n  //                 <textarea name=\"description\" value={desc} id=\"desc\" onChange={(e) => setDesc(e.target.value)}></textarea>\n  //                 </li>\n  //                 <li>\n  //                 <li>\n  //                 <label htmlFor=\"name\">\n  //                     Category\n  //                 </label>\n  //                 <input type=\"text\" name=\"category\" value={category} id=\"category\" onChange={(e) => setCategory(e.target.value)}>\n  //                 </input>\n  //                 </li> \n  //                 <button type=\"submit\" className=\"button primary\">Create Shop\"</button>\n  //                 </li>\n  //                 <li>\n  //                 <button type=\"button\" onClick={() => setModalVisible(false)} className=\"button secondary\">Back</button>\n  //                 </li>\n  //             </ul>\n  //             </form>\n  //         </div>\n  //         }\n  // </div>\n  ;\n}","map":{"version":3,"sources":["/home/brotherlymite/Desktop/jaldide/frontend/src/Pages/Sellerinventorypage.js"],"names":["React","useEffect","useState","Link","useSelector","useDispatch","signin","Sellerinventorypage","props","modalVisible","setModalVisible","name","setName","desc","setDesc","category","setCategory","shopSave","state","loading","loadingSave","success","successSave","error","errorSave","dispatch","openModal","shop","submitHandler","e","preventDefault","saveShop","match","params","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,0BAAvB,C,CACA;;AAEA,eAAe,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAE/C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,KAAD,CAAhD,CAF+C,CAG/C;;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMe,QAAQ,GAAGb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;AACA,QAAM;AAAEE,IAAAA,OAAO,EAAEC,WAAX;AAAwBC,IAAAA,OAAO,EAAEC,WAAjC;AAA8CC,IAAAA,KAAK,EAAEC;AAArD,MAAmEP,QAAzE;AACA,QAAMQ,QAAQ,GAAGpB,WAAW,EAA5B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIqB,WAAJ,EAAiB,CACf;AACD;;AACD,WAAO,MAAM,CACX;AACD,KAFD;AAGD,GAPM,EAOJ,CAACA,WAAD,CAPI,CAAT;;AASA,QAAMI,SAAS,GAAIC,IAAD,IAAU;AACxBjB,IAAAA,eAAe,CAAC,IAAD,CAAf,CADwB,CAExB;;AACAE,IAAAA,OAAO,CAACe,IAAI,CAAChB,IAAN,CAAP;AACAG,IAAAA,OAAO,CAACa,IAAI,CAACd,IAAN,CAAP;AACAG,IAAAA,WAAW,CAACW,IAAI,CAACZ,QAAN,CAAX;AACH,GAND;;AAQA,QAAMa,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,QAAQ,CAACM,QAAQ,CAAC;AACd;AACApB,MAAAA,IAFc;AAERE,MAAAA,IAFQ;AAEFE,MAAAA;AAFE,KAAD,CAAT,CAAR;AAIH,GAND;;AAQA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,KAAK,CAACwB,KAAN,CAAYC,MAAZ,CAAmBC,EAAxB,CAFA,CADJ,CAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzDA;AA2DH","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { signin } from '../actions/sellerActions';\n// import { saveShop } from '../actions/shopActions';\n\nexport default function Sellerinventorypage(props) {\n\n    const [modalVisible, setModalVisible] = useState(false);\n    //const [id, setId] = useState('');\n    const [name, setName] = useState('');\n    const [desc, setDesc] = useState('');\n    const [category, setCategory] = useState('');\n\n    const shopSave = useSelector(state => state.shopSave);\n    const { loading: loadingSave, success: successSave, error: errorSave } = shopSave;\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (successSave) {\n          //setModalVisible(false);\n        }\n        return () => {\n          //\n        };\n      }, [successSave]);\n\n    const openModal = (shop) => {\n        setModalVisible(true);\n        //setId(product._id);\n        setName(shop.name);\n        setDesc(shop.desc);\n        setCategory(shop.category);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(saveShop({\n            //_id: id,\n            name, desc, category\n        }));\n    }\n\n    return (\n        <div>\n        <h3>Wassup new Seller, you can make your own virtual shop here</h3>\n        <h2>{props.match.params.id}</h2>\n        </div>\n    //     <div className=\"content content-margined\">\n\n    //         <div className=\"product-header\">\n    //         <h3>Products</h3>\n    //         <button className=\"button primary\" onClick={() => openModal({})}>Create Product</button>\n    //         </div>\n    //         {\n    //         modalVisible &&\n    //         <div className=\"form\">\n    //             <form onSubmit={submitHandler} >\n    //             <ul className=\"form-container\">\n    //                 <li>\n    //                 <h2>Create your virtual Shop</h2>\n    //                 </li>\n    //                 <li>\n    //                 {loadingSave && <div>Loading...</div>}\n    //                 {errorSave && <div>{errorSave}</div>}\n    //                 </li>\n\n    //                 <li>\n    //                 <label htmlFor=\"name\">\n    //                     Shop Name\n    //                 </label>\n    //                 <input type=\"text\" name=\"name\" value={name} id=\"name\" onChange={(e) => setName(e.target.value)}>\n    //                 </input>\n    //                 </li>\n\n    //                 <li>\n    //                 <label htmlFor=\"description\">\n    //                     Description\n    //                 </label>\n    //                 <textarea name=\"description\" value={desc} id=\"desc\" onChange={(e) => setDesc(e.target.value)}></textarea>\n    //                 </li>\n    //                 <li>\n\n    //                 <li>\n    //                 <label htmlFor=\"name\">\n    //                     Category\n    //                 </label>\n    //                 <input type=\"text\" name=\"category\" value={category} id=\"category\" onChange={(e) => setCategory(e.target.value)}>\n    //                 </input>\n    //                 </li> \n\n    //                 <button type=\"submit\" className=\"button primary\">Create Shop\"</button>\n    //                 </li>\n    //                 <li>\n    //                 <button type=\"button\" onClick={() => setModalVisible(false)} className=\"button secondary\">Back</button>\n    //                 </li>\n    //             </ul>\n    //             </form>\n    //         </div>\n    //         }\n    // </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}