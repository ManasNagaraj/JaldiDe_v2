{"ast":null,"code":"import Axios from \"axios\";\nimport Cookie from 'js-cookie';\nimport { SELLER_SIGNIN_REQUEST, SELLER_SIGNIN_SUCCESS, SELLER_SIGNIN_FAIL, SELLER_REGISTER_REQUEST, SELLER_REGISTER_SUCCESS, SELLER_REGISTER_FAIL } from \"../constants/sellerConstants\";\n\nconst signin = (email, password) => async dispatch => {\n  dispatch({\n    type: SELLER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/seller/signin\", {\n      email,\n      password\n    });\n    dispatch({\n      type: SELLER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    Cookie.set('sellerInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: SELLER_SIGNIN_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: SELLER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/seller/register\", {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: SELLER_REGISTER_SUCCESS,\n      payload: data\n    });\n    Cookie.set('sellerInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: SELLER_REGISTER_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { signin, register };","map":{"version":3,"sources":["/home/brotherlymite/Desktop/jaldide/frontend/src/actions/sellerActions.js"],"names":["Axios","Cookie","SELLER_SIGNIN_REQUEST","SELLER_SIGNIN_SUCCESS","SELLER_SIGNIN_FAIL","SELLER_REGISTER_REQUEST","SELLER_REGISTER_SUCCESS","SELLER_REGISTER_FAIL","signin","email","password","dispatch","type","payload","data","post","set","JSON","stringify","error","message","register","name"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,qBAAT,EAAgCC,qBAAhC,EAAuDC,kBAAvD,EAA2EC,uBAA3E,EAAoGC,uBAApG,EAA6HC,oBAA7H,QAAyJ,8BAAzJ;;AAGA,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IACpC;AACEA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEV,qBAAR;AAA+BW,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAxC,GAAD,CAAR;;AACA,MACA;AACE,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMd,KAAK,CAACe,IAAN,CAAW,oBAAX,EAAiC;AAAEN,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAjC,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET,qBAAR;AAA+BU,MAAAA,OAAO,EAAEC;AAAxC,KAAD,CAAR;AACAb,IAAAA,MAAM,CAACe,GAAP,CAAW,YAAX,EAAyBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAzB;AACD,GALD,CAMA,OAAOK,KAAP,EACA;AACER,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,kBAAR;AAA4BS,MAAAA,OAAO,EAAEM,KAAK,CAACC;AAA3C,KAAD,CAAR;AACD;AACF,CAbD;;AAeA,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOb,KAAP,EAAcC,QAAd,KAA2B,MAAOC,QAAP,IAC5C;AACEA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP,uBAAR;AAAiCQ,IAAAA,OAAO,EAAE;AAAES,MAAAA,IAAF;AAAQb,MAAAA,KAAR;AAAeC,MAAAA;AAAf;AAA1C,GAAD,CAAR;;AACA,MACA;AACE,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMd,KAAK,CAACe,IAAN,CAAW,sBAAX,EAAmC;AAAEO,MAAAA,IAAF;AAAQb,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAAnC,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,uBAAR;AAAiCO,MAAAA,OAAO,EAAEC;AAA1C,KAAD,CAAR;AACAb,IAAAA,MAAM,CAACe,GAAP,CAAW,YAAX,EAAyBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAzB;AACD,GALD,CAMA,OAAOK,KAAP,EACA;AACER,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,oBAAR;AAA8BM,MAAAA,OAAO,EAAEM,KAAK,CAACC;AAA7C,KAAD,CAAR;AACD;AACF,CAbD;;AAeA,SAASZ,MAAT,EAAiBa,QAAjB","sourcesContent":["import Axios from \"axios\";\nimport Cookie from 'js-cookie';\nimport { SELLER_SIGNIN_REQUEST, SELLER_SIGNIN_SUCCESS, SELLER_SIGNIN_FAIL, SELLER_REGISTER_REQUEST, SELLER_REGISTER_SUCCESS, SELLER_REGISTER_FAIL } from \"../constants/sellerConstants\";\n\n\nconst signin = (email, password) => async (dispatch) => \n{\n  dispatch({ type: SELLER_SIGNIN_REQUEST, payload: { email, password } });\n  try \n  {\n    const { data } = await Axios.post(\"/api/seller/signin\", { email, password });\n    dispatch({ type: SELLER_SIGNIN_SUCCESS, payload: data });\n    Cookie.set('sellerInfo', JSON.stringify(data));\n  } \n  catch (error) \n  {\n    dispatch({ type: SELLER_SIGNIN_FAIL, payload: error.message });\n  }\n}\n\nconst register = (name, email, password) => async (dispatch) => \n{\n  dispatch({ type: SELLER_REGISTER_REQUEST, payload: { name, email, password } });\n  try \n  {\n    const { data } = await Axios.post(\"/api/seller/register\", { name, email, password });\n    dispatch({ type: SELLER_REGISTER_SUCCESS, payload: data });\n    Cookie.set('sellerInfo', JSON.stringify(data));\n  } \n  catch (error) \n  {\n    dispatch({ type: SELLER_REGISTER_FAIL, payload: error.message });\n  }\n}\n\nexport { signin, register };"]},"metadata":{},"sourceType":"module"}