{"ast":null,"code":"import { SHOP_LIST_REQUEST, SHOP_LIST_SUCCESS, SHOP_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL } from \"../constants/shopConstants\";\nimport axios from \"axios\";\n\nconst listShops = () => async dispatch => {\n  try {\n    dispatch({\n      type: SHOP_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/shops/\");\n    dispatch({\n      type: SHOP_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SHOP_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst listProducts = shopID => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST,\n      payload: shopID\n    });\n    const {\n      data\n    } = await axios.get(\"/api/shops/\" + shopID);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveShop = shop => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SHOP_SAVE_REQUEST,\n      payload: shop\n    });\n    const {\n      sellerSignin: {\n        sellerInfo\n      }\n    } = getState(); //if (!product._id) {\n\n    const {\n      data\n    } = await Axios.post('/api/createshop/' + shop._id, shop, {\n      headers: {\n        'Authorization': 'Bearer ' + sellerInfo.token\n      }\n    });\n    dispatch({\n      type: SHOP_SAVE_SUCCESS,\n      payload: data\n    }); //} \n    //   else {\n    //     const { data } = await Axios.put('/api/products/' + product._id, product, {\n    //       headers: {\n    //         'Authorization': 'Bearer ' + userInfo.token\n    //       }\n    //     });\n    //     dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\n    //   }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listShops, listProducts };","map":{"version":3,"sources":["/home/brotherlymite/Desktop/jaldide/frontend/src/actions/shopActions.js"],"names":["SHOP_LIST_REQUEST","SHOP_LIST_SUCCESS","SHOP_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","axios","listShops","dispatch","type","data","get","payload","error","message","listProducts","shopID","saveShop","shop","getState","SHOP_SAVE_REQUEST","sellerSignin","sellerInfo","Axios","post","_id","headers","token","SHOP_SAVE_SUCCESS","PRODUCT_SAVE_FAIL"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,iBAA5B,EAA+CC,cAA/C,EAA+DC,oBAA/D,EAAqFC,oBAArF,EAA2GC,iBAA3G,QAAoI,4BAApI;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACxC,MACA;AACIA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACA,UAAM;AAAEU,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACK,GAAN,CAAU,aAAV,CAAvB;AACAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,iBAAR;AAA2BW,MAAAA,OAAO,EAAEF;AAApC,KAAD,CAAR;AACH,GALD,CAMA,OAAMG,KAAN,EACA;AACIL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,cAAR;AAAwBU,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAAvC,KAAD,CAAR;AACH;AACJ,CAXD;;AAaA,MAAMC,YAAY,GAAIC,MAAD,IAAY,MAAOR,QAAP,IAAoB;AACjD,MACA;AACIA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,oBAAR;AAA8BS,MAAAA,OAAO,EAAEI;AAAvC,KAAD,CAAR;AACA,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACK,GAAN,CAAU,gBAAgBK,MAA1B,CAAvB;AACAR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,oBAAR;AAA8BQ,MAAAA,OAAO,EAAEF;AAAvC,KAAD,CAAR;AACH,GALD,CAMA,OAAMG,KAAN,EACA;AACIL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,iBAAR;AAA2BO,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA1C,KAAD,CAAR;AACH;AACJ,CAXD;;AAaA,MAAMG,QAAQ,GAAIC,IAAD,IAAU,OAAOV,QAAP,EAAiBW,QAAjB,KAA8B;AACrD,MAAI;AACFX,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEW,iBAAR;AAA2BR,MAAAA,OAAO,EAAEM;AAApC,KAAD,CAAR;AACA,UAAM;AAAEG,MAAAA,YAAY,EAAE;AAAEC,QAAAA;AAAF;AAAhB,QAAmCH,QAAQ,EAAjD,CAFE,CAGF;;AACE,UAAM;AAAET,MAAAA;AAAF,QAAW,MAAMa,KAAK,CAACC,IAAN,CAAW,qBAAoBN,IAAI,CAACO,GAApC,EAAyCP,IAAzC,EAA+C;AACpEQ,MAAAA,OAAO,EAAE;AACP,yBAAiB,YAAYJ,UAAU,CAACK;AADjC;AAD2D,KAA/C,CAAvB;AAKAnB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEmB,iBAAR;AAA2BhB,MAAAA,OAAO,EAAEF;AAApC,KAAD,CAAR,CATA,CAUF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC,GApBD,CAoBE,OAAOG,KAAP,EAAc;AAEdL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEoB,iBAAR;AAA2BjB,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA1C,KAAD,CAAR;AACD;AACF,CAzBH;;AA4BA,SAASP,SAAT,EAAqBQ,YAArB","sourcesContent":["import { SHOP_LIST_REQUEST, SHOP_LIST_SUCCESS, SHOP_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL } from \"../constants/shopConstants\";\nimport axios from \"axios\";\n\nconst listShops = () => async (dispatch) => {\n    try\n    {\n        dispatch({ type: SHOP_LIST_REQUEST });\n        const { data } = await axios.get(\"/api/shops/\");\n        dispatch({ type: SHOP_LIST_SUCCESS, payload: data});\n    }\n    catch(error)\n    {\n        dispatch({ type: SHOP_LIST_FAIL, payload: error.message});\n    }  \n}\n\nconst listProducts = (shopID) => async (dispatch) => {\n    try\n    {\n        dispatch({ type: PRODUCT_LIST_REQUEST, payload: shopID });\n        const { data } = await axios.get(\"/api/shops/\" + shopID);\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n    }\n    catch(error)\n    {\n        dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\n    }\n}\n\nconst saveShop = (shop) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: SHOP_SAVE_REQUEST, payload: shop });\n      const { sellerSignin: { sellerInfo } } = getState();\n      //if (!product._id) {\n        const { data } = await Axios.post('/api/createshop/'+ shop._id, shop, {\n          headers: {\n            'Authorization': 'Bearer ' + sellerInfo.token\n          }\n        });\n        dispatch({ type: SHOP_SAVE_SUCCESS, payload: data });\n      //} \n    //   else {\n    //     const { data } = await Axios.put('/api/products/' + product._id, product, {\n    //       headers: {\n    //         'Authorization': 'Bearer ' + userInfo.token\n    //       }\n    //     });\n    //     dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\n    //   }\n  \n    } catch (error) {\n  \n      dispatch({ type: PRODUCT_SAVE_FAIL, payload: error.message });\n    }\n  }\n\n\nexport { listShops , listProducts }"]},"metadata":{},"sourceType":"module"}